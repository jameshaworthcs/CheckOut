<!DOCTYPE html>
<html lang="en">

<head>
    <%- include('../global/head'); %>
    <title>Welcome to AutoCheckin</title>
    <%- include('./styles/shared'); %>
    <style>
        /* Page-specific styles only */
        .promo-container {
            height: 241px;
        }
        .warning-box {
            background-color: var(--warning-background);
            border: 1px solid var(--warning-border);
            color: var(--warning-text);
            padding: 20px;
            border-radius: 10px;
            margin: 20px 0;
        }

        .warning-box p {
            color: var(--warning-text);
            margin-bottom: 15px;
        }

        .warning-box p:last-child {
            margin-bottom: 0;
        }

        .warning-box a {
            color: var(--warning-text);
            text-decoration: underline;
        }

        .warning-box small {
            opacity: 0.8;
        }
    </style>
</head>

<body>
    <div id="loading-overlay">
        <div id="loading-content">
            <svg id="loading-svg" width="100" height="100">
                <defs>
                    <clipPath id="reveal-clip">
                        <rect id="clip-rect" x="0" y="0" width="0" height="100%" />
                    </clipPath>
                </defs>
                <image href="/static/tick-white-min2.svg" width="100" height="74" clip-path="url(#reveal-clip)" />
            </svg>
            <div id="loading-spinner" class="loader" style="display: none;"></div>
        </div>
    </div>
    <%- include('../global/navbar'); %>
    <div class="header">
        <div class="header-content">
            <span>Let's setup <b>AutoCheckin</b></span>
            <%- include('../global/icons/sparkle'); %>
        </div>
    </div>
    <div class="content">
        <p class="sub-text"><b>Congratulations, you've been accepted.</b><br><br><span class="subtext">This won't take long.</span></p>
        <div class="info-section">
            <div class="warning-box">
                <p><b>For your security, setup can only be completed on checkout.ac</b></p>
                <p>We do not allow rejectdopamine.com or beta.checkout.ac for setting up AutoCheckin. This is to keep your account secure.</p>
                <p>Visit <a target="_blank" href="https://checkout.ac/auto">checkout.ac/auto</a> to continue setup.</p>
                <p><small>Once setup, you can continue to use alternative domains.</small></p>
            </div>
        </div>
    </div>

    <script>

document.addEventListener('keydown', function(event) {
    if (event.key === 'Enter') {
        let activeElement = document.activeElement;
        if (!activeElement || (activeElement && !['input', 'textarea'].includes(activeElement.tagName.toLowerCase()))) {
            document.getElementById('continue-btn').click();
        }
    }
});

function showLoadingOverlay(duration) {
    const overlay = document.getElementById('loading-overlay');
    const clipRect = document.getElementById('clip-rect');
    const spinner = document.getElementById('loading-spinner');

    overlay.style.visibility = 'visible';
    overlay.style.opacity = '1';

    clipRect.setAttribute('width', '0');

    let startTime = null;
    let animationCompleted = false;

    function animateReveal(time) {
        if (!startTime) startTime = time;
        const elapsed = time - startTime;
        const progress = Math.min(elapsed / duration, 1);
        clipRect.setAttribute('width', `${progress * 100}%`);

        if (progress < 1) {
            requestAnimationFrame(animateReveal);
        } else {
            animationCompleted = true;
            if (window.overlayDone) {
                removeOverlay();
            } else {
                spinner.style.display = 'block';
            }
        }
    }

    requestAnimationFrame(animateReveal);

    window.endLoadingOverlay = function() {
        window.overlayDone = true;
        if (animationCompleted) {
            removeOverlay();
        }
    }

    function removeOverlay() {
        overlay.style.opacity = '0';
        overlay.style.visibility = 'hidden';
        clipRect.setAttribute('width', '0');
        spinner.style.display = 'none';
        window.overlayDone = false;
        animationCompleted = false;
    }

    window.overlayDone = false;
}

function updateQueryParameter(url, key, value) {
        let urlObj = new URL(url);
        urlObj.searchParams.set(key, value);
        return urlObj.toString();
    }

document.getElementById('continue-btn').addEventListener('click', function() {
    // Function to preload the page and then swap the content or reload the page
    function preloadAndSwapPage(url) {
        let preloadedPage;

        // Use the Fetch API to preload the page with the updated URL
        fetch(url)
            .then(response => response.text())
            .then(html => {
                preloadedPage = html;
            })
            .catch(error => {
                console.error('Error preloading the page:', error);
            });

        // Wait 500ms, then swap the page content with the preloaded content
        setTimeout(() => {
            if (preloadedPage) {
                document.open();
                document.write(preloadedPage);
                history.pushState({}, null, "/auto");
                document.close();
            } else {
                // Fallback to a regular reload if preloading fails
                window.location.href = url;
            }
        }, 300);
    }
        // Continue to autocheckin
        showLoadingOverlay(450);
        //let currentUrl = window.location.href;
        let updatedUrl = '/auto';
        preloadAndSwapPage(updatedUrl);
});

        function adjustFooterPosition() {
            const content = document.querySelector('.content');
            const footer = document.querySelector('.footer');
            const contentHeight = content.scrollHeight;
            const viewportHeight = window.innerHeight;
            const headerHeight = document.querySelector('.header').offsetHeight;
            const footerHeight = footer.offsetHeight;

            if (contentHeight + headerHeight + footerHeight > viewportHeight) {
                footer.style.position = 'sticky';
                footer.style.bottom = '0';
                footer.style.marginTop = 'auto';
            } else {
                footer.style.position = 'relative';
                footer.style.bottom = 'auto';
            }
        }

        document.addEventListener('DOMContentLoaded', adjustFooterPosition);
        window.addEventListener('resize', adjustFooterPosition);


    </script>
</body>

</html>